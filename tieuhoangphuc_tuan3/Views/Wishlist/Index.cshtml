@model IEnumerable<WebBanDienThoai.Models.Wishlist>
@{
    ViewData["Title"] = "Danh Sách Yêu Thích";
    var count = Model.Count();
}

<div class="container py-5">
    <div class="text-center mb-5">
        <span class="fs-2 fw-bold text-danger position-relative d-inline-block" style="vertical-align: middle;">
            <i class="bi bi-heart-fill"></i>
            <span class="wishlist-badge position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger shadow-sm">
                @count
            </span>
        </span>
        <span class="fs-2 fw-bold align-middle ms-2">@ViewData["Title"]</span>
    </div>

    @if (Model.Any())
    {
        <div class="row row-cols-1 row-cols-md-3 g-4 justify-content-center">
            @foreach (var item in Model)
            {
                <div class="col d-flex">
                    <div class="card wishlist-card h-100 shadow-lg border-0 flex-fill">
                        <div class="wishlist-card-img-box text-center pt-3">
                            <a href="@Url.Action("Display", "Product", new { id = item.ProductId })">
                                <img src="@item.Product.ImageUrl" class="wishlist-img rounded" alt="@item.Product.Name" />
                            </a>
                        </div>
                        <div class="card-body d-flex flex-column px-4">
                            <h5 class="card-title text-center fw-semibold mb-1">
                                <a href="@Url.Action("Display", "Product", new { id = item.ProductId })" class="text-decoration-none text-dark hover-text-primary">
                                    @item.Product.Name
                                </a>
                            </h5>
                            <div class="text-center mb-3">
                                <span class="fw-bold fs-5 text-danger">@item.Product.Price.ToString("C0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN"))</span>
                            </div>
                            <div class="d-flex flex-column gap-2 mt-auto">
                                <form class="add-to-cart-form" data-product-id="@item.ProductId">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-success btn-lg w-100 rounded-pill shadow-sm d-flex align-items-center justify-content-center gap-2">
                                        <i class="bi bi-cart-plus"></i> Thêm vào Giỏ Hàng
                                    </button>
                                </form>
                                <form method="post" action="@Url.Action("RemoveFromWishlist", "Wishlist")">
                                    <input type="hidden" name="productId" value="@item.ProductId" />
                                    <button type="submit" class="btn btn-outline-danger btn-lg w-100 rounded-pill shadow-sm d-flex align-items-center justify-content-center gap-2">
                                        <i class="bi bi-x-circle"></i> Xóa khỏi Yêu Thích
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="alert alert-info text-center mt-4 p-4 fs-5 rounded-pill">
            <i class="bi bi-emoji-frown text-secondary fs-2"></i><br />
            Không có sản phẩm nào trong danh sách yêu thích của bạn.
        </div>
    }

    <div style="height: 32px;"></div>
    <!-- Phần gợi ý sản phẩm -->
    <div class="mt-5">
        <h4 class="fw-semibold mb-3"><i class="bi bi-star-half text-warning"></i> Có thể bạn cũng thích</h4>
        <div class="row flex-nowrap overflow-auto pb-2" style="gap:24px;">
            @foreach (var p in ViewBag.SuggestedProducts as List<Product>)
            {
                <div class="col-auto" style="min-width: 210px;">
                    <div class="card border-0 shadow-sm h-100">
                        <a href="@Url.Action("Display", "Product", new { id = p.Id })">
                            <img src="@p.ImageUrl" class="card-img-top" style="height:120px;object-fit:contain">
                        </a>
                        <div class="card-body p-2 text-center">
                            <div class="fw-semibold small mb-1" style="min-height:38px;">@p.Name</div>
                            <div class="text-danger fw-bold mb-2">@p.Price.ToString("N0") đ</div>
                            <a href="@Url.Action("Display", "Product", new { id = p.Id })" class="btn btn-sm btn-outline-danger rounded-pill">Xem chi tiết</a>
                        </div>
                    </div>
                </div>
            }
            <div class="col-auto d-flex align-items-center">
                <a href="/Product" class="btn btn-warning rounded-pill ms-2">Xem tất cả &gt;</a>
            </div>
        </div>
    </div>
</div>

<style>
    .wishlist-badge {
        font-size: 0.9rem;
        min-width: 32px;
        min-height: 32px;
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0 2px 8px rgba(220,53,69,.2);
        border: 2px solid #fff;
    }

    .wishlist-card {
        border-radius: 20px;
        transition: box-shadow 0.2s;
        background: #fff;
        min-width: 300px;
    }

        .wishlist-card:hover {
            box-shadow: 0 6px 24px rgba(220, 53, 69, 0.13);
            border-color: #ffc107;
        }

    .wishlist-card-img-box {
        min-height: 200px;
        background: #f8f9fa;
        border-top-left-radius: 20px;
        border-top-right-radius: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .wishlist-img {
        width: 170px;
        height: 170px;
        object-fit: contain;
        transition: transform 0.2s;
    }

    .wishlist-card:hover .wishlist-img {
        transform: scale(1.07) rotate(-2deg);
    }

    .btn-success, .btn-outline-danger {
        font-size: 1rem;
        font-weight: 500;
        transition: background .15s, color .15s;
    }

        .btn-success:active, .btn-success:focus {
            background: #218838 !important;
            border-color: #1e7e34 !important;
        }

        .btn-outline-danger:active, .btn-outline-danger:focus, .btn-outline-danger:hover {
            background: #dc3545 !important;
            color: #fff !important;
            border-color: #dc3545 !important;
        }

    .hover-text-primary:hover {
        color: #dc3545 !important;
    }
</style>

@section Scripts {
    <script>
        document.querySelectorAll('.add-to-cart-form').forEach(form => {
            form.addEventListener('submit', function (e) {
                e.preventDefault();

                const productId = this.getAttribute('data-product-id');
                const token = this.querySelector('input[name="__RequestVerificationToken"]')?.value;

                fetch('/ShoppingCart/AddToCart', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded'
                    },
                    body: `productId=${productId}&quantity=1&__RequestVerificationToken=${encodeURIComponent(token)}`
                })
                .then(response => {
                    if (response.ok) {
                        alert("🎉 Sản phẩm đã được thêm vào giỏ hàng!");
                        // Gọi để lấy số lượng cập nhật
                        fetch('/ShoppingCart/GetCartItemCount')
                            .then(res => res.json())
                            .then(data => {
                                const cartBadge = document.querySelector('.cart-badge');
                                if (cartBadge) {
                                    cartBadge.textContent = data.count;
                                    cartBadge.style.display = data.count > 0 ? 'inline-block' : 'none';
                                }
                            });
                    } else {
                        alert("❌ Có lỗi khi thêm sản phẩm.");
                    }
                })
                .catch(error => {
                    alert("⚠️ Lỗi mạng: " + error.message);
                });
            });
        });

        window.onload = function() {
            var adBanner = document.querySelector('.carousel');
            if (adBanner) {
                adBanner.style.display = 'none';
            }
        };
    </script>
}
